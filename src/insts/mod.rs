// $GEN_VERSION 3
// This file is auto-generated.
// Do not edit this file manually, use `gen_inst.py` to regenerate it.
#![allow(
    dead_code,
    unused_variables,
    unused_imports,
    unreachable_code,
    unused_mut
)]
use crate::bits::*;
use crate::format::*;
use crate::*;

mod decode;
use decode::*;

mod rv32i_rv64i;
use rv32i_rv64i::*;

mod rv64i;
use rv64i::*;

mod rv32m_rv64m;
use rv32m_rv64m::*;

mod rv64m;
use rv64m::*;

mod rv32a_rv64a;
use rv32a_rv64a::*;

mod rv64a;
use rv64a::*;

mod rv32f_rv64f;
use rv32f_rv64f::*;

mod rv64f;
use rv64f::*;

mod rv64d;
use rv64d::*;

mod rv64c;
use rv64c::*;

#[derive(Debug, Clone, Copy)]
pub enum Inst {
    // RV32I_RV64I
    Add(RawInst),
    Sub(RawInst),
    Sll(RawInst),
    Slt(RawInst),
    Sltu(RawInst),
    Xor(RawInst),
    Srl(RawInst),
    Sra(RawInst),
    Or(RawInst),
    And(RawInst),
    SfenceVma(RawInst),
    Addi(RawInst),
    Slti(RawInst),
    Sltiu(RawInst),
    Xori(RawInst),
    Ori(RawInst),
    Andi(RawInst),
    Slli(RawInst),
    Srli(RawInst),
    Srai(RawInst),
    Lb(RawInst),
    Lh(RawInst),
    Lw(RawInst),
    Lbu(RawInst),
    Lhu(RawInst),
    Jalr(RawInst),
    Fence(RawInst),
    FenceI(RawInst),
    Csrrw(RawInst),
    Csrrs(RawInst),
    Csrrc(RawInst),
    Csrrwi(RawInst),
    Csrrsi(RawInst),
    Csrrci(RawInst),
    Ecall(RawInst),
    Ebreak(RawInst),
    Uret(RawInst),
    Sret(RawInst),
    Mret(RawInst),
    Wfi(RawInst),
    Sb(RawInst),
    Sh(RawInst),
    Sw(RawInst),
    Beq(RawInst),
    Bne(RawInst),
    Blt(RawInst),
    Bge(RawInst),
    Bltu(RawInst),
    Bgeu(RawInst),
    Lui(RawInst),
    Auipc(RawInst),
    Jal(RawInst),

    // RV64I
    Addw(RawInst),
    Subw(RawInst),
    Sllw(RawInst),
    Srlw(RawInst),
    Sraw(RawInst),
    Addiw(RawInst),
    Slliw(RawInst),
    Srliw(RawInst),
    Sraiw(RawInst),
    Lwu(RawInst),
    Ld(RawInst),
    Sd(RawInst),

    // RV32M_RV64M
    Mul(RawInst),
    Mulh(RawInst),
    Mulhsu(RawInst),
    Mulhu(RawInst),
    Div(RawInst),
    Divu(RawInst),
    Rem(RawInst),
    Remu(RawInst),

    // RV64M
    Mulw(RawInst),
    Divw(RawInst),
    Divuw(RawInst),
    Remw(RawInst),
    Remuw(RawInst),

    // RV32A_RV64A
    LrW(RawInst),
    ScW(RawInst),
    AmoswapW(RawInst),
    AmoaddW(RawInst),
    AmoxorW(RawInst),
    AmoandW(RawInst),
    AmoorW(RawInst),
    AmominW(RawInst),
    AmomaxW(RawInst),
    AmominuW(RawInst),
    AmomaxuW(RawInst),

    // RV64A
    LrD(RawInst),
    ScD(RawInst),
    AmodswapD(RawInst),
    AmoaddD(RawInst),
    AmoxorD(RawInst),
    AmoandD(RawInst),
    AmoorD(RawInst),
    AmominD(RawInst),
    AmomaxD(RawInst),
    AmominuD(RawInst),
    AmomaxuD(RawInst),

    // RV32F_RV64F
    FmaddS(RawInst),
    FmsubS(RawInst),
    FnmsubS(RawInst),
    FnmaddS(RawInst),
    FaddS(RawInst),
    FsubS(RawInst),
    FmulS(RawInst),
    FdivS(RawInst),
    FsqrtS(RawInst),
    FsgnjS(RawInst),
    FsgnjnS(RawInst),
    FsgnjxS(RawInst),
    FminS(RawInst),
    FmaxS(RawInst),
    FcvtWS(RawInst),
    FcvtWuS(RawInst),
    FmvXW(RawInst),
    FeqS(RawInst),
    FltS(RawInst),
    FleS(RawInst),
    FclassS(RawInst),
    FcvtSW(RawInst),
    FcvtSWu(RawInst),
    FmvWX(RawInst),
    FmaddD(RawInst),
    FmsubD(RawInst),
    FnmsubD(RawInst),
    FnmaddD(RawInst),
    FaddD(RawInst),
    FsubD(RawInst),
    FmulD(RawInst),
    FdivD(RawInst),
    FsqrtD(RawInst),
    FsgnjD(RawInst),
    FsgnjnD(RawInst),
    FsgnjxD(RawInst),
    FminD(RawInst),
    FmaxD(RawInst),
    FcvtSD(RawInst),
    FcvtDS(RawInst),
    FeqD(RawInst),
    FltD(RawInst),
    FleD(RawInst),
    FclassD(RawInst),
    FcvtWD(RawInst),
    FcvtWuD(RawInst),
    FcvtDW(RawInst),
    FcvtDWu(RawInst),
    Flw(RawInst),
    Fsw(RawInst),
    Fld(RawInst),
    Fsd(RawInst),

    // RV64F
    FcvtLS(RawInst),
    FcvtLuS(RawInst),
    FcvtSL(RawInst),
    FcvtSLu(RawInst),

    // RV64D
    FcvtLD(RawInst),
    FcvtLuD(RawInst),
    FmvXD(RawInst),
    FcvtDL(RawInst),
    FcvtDLu(RawInst),
    FmvDX(RawInst),

    // RV64C
    CJr(RawInst),
    CMv(RawInst),
    CEbreak(RawInst),
    CJalr(RawInst),
    CAdd(RawInst),
    CNop(RawInst),
    CAddi(RawInst),
    CAddiw(RawInst),
    CLi(RawInst),
    CAddi16sp(RawInst),
    CLui(RawInst),
    CSrli(RawInst),
    CSrai(RawInst),
    CAndi(RawInst),
    CSlli(RawInst),
    CFldsp(RawInst),
    CLwsp(RawInst),
    CLdsp(RawInst),
    CFsdsp(RawInst),
    CSwsp(RawInst),
    CSdsp(RawInst),
    CAddi4spn(RawInst),
    CFld(RawInst),
    CLw(RawInst),
    CLd(RawInst),
    CFsd(RawInst),
    CSw(RawInst),
    CSd(RawInst),
    CSub(RawInst),
    CXor(RawInst),
    COr(RawInst),
    CAnd(RawInst),
    CSubw(RawInst),
    CAddw(RawInst),
    CBeqz(RawInst),
    CBnez(RawInst),
    CJ(RawInst),
}
impl Inst {
    #[inline]
    pub fn run(self, vm: &mut VM) -> Result<(), VMRunError> {
        match self {
            Inst::Add(inst) => Add::run(RunData::new(inst, vm)),
            Inst::Sub(inst) => Sub::run(RunData::new(inst, vm)),
            Inst::Sll(inst) => Sll::run(RunData::new(inst, vm)),
            Inst::Slt(inst) => Slt::run(RunData::new(inst, vm)),
            Inst::Sltu(inst) => Sltu::run(RunData::new(inst, vm)),
            Inst::Xor(inst) => Xor::run(RunData::new(inst, vm)),
            Inst::Srl(inst) => Srl::run(RunData::new(inst, vm)),
            Inst::Sra(inst) => Sra::run(RunData::new(inst, vm)),
            Inst::Or(inst) => Or::run(RunData::new(inst, vm)),
            Inst::And(inst) => And::run(RunData::new(inst, vm)),
            Inst::SfenceVma(inst) => SfenceVma::run(RunData::new(inst, vm)),
            Inst::Addi(inst) => Addi::run(RunData::new(inst, vm)),
            Inst::Slti(inst) => Slti::run(RunData::new(inst, vm)),
            Inst::Sltiu(inst) => Sltiu::run(RunData::new(inst, vm)),
            Inst::Xori(inst) => Xori::run(RunData::new(inst, vm)),
            Inst::Ori(inst) => Ori::run(RunData::new(inst, vm)),
            Inst::Andi(inst) => Andi::run(RunData::new(inst, vm)),
            Inst::Slli(inst) => Slli::run(RunData::new(inst, vm)),
            Inst::Srli(inst) => Srli::run(RunData::new(inst, vm)),
            Inst::Srai(inst) => Srai::run(RunData::new(inst, vm)),
            Inst::Lb(inst) => Lb::run(RunData::new(inst, vm)),
            Inst::Lh(inst) => Lh::run(RunData::new(inst, vm)),
            Inst::Lw(inst) => Lw::run(RunData::new(inst, vm)),
            Inst::Lbu(inst) => Lbu::run(RunData::new(inst, vm)),
            Inst::Lhu(inst) => Lhu::run(RunData::new(inst, vm)),
            Inst::Jalr(inst) => Jalr::run(RunData::new(inst, vm)),
            Inst::Fence(inst) => Fence::run(RunData::new(inst, vm)),
            Inst::FenceI(inst) => FenceI::run(RunData::new(inst, vm)),
            Inst::Csrrw(inst) => Csrrw::run(RunData::new(inst, vm)),
            Inst::Csrrs(inst) => Csrrs::run(RunData::new(inst, vm)),
            Inst::Csrrc(inst) => Csrrc::run(RunData::new(inst, vm)),
            Inst::Csrrwi(inst) => Csrrwi::run(RunData::new(inst, vm)),
            Inst::Csrrsi(inst) => Csrrsi::run(RunData::new(inst, vm)),
            Inst::Csrrci(inst) => Csrrci::run(RunData::new(inst, vm)),
            Inst::Ecall(inst) => Ecall::run(RunData::new(inst, vm)),
            Inst::Ebreak(inst) => Ebreak::run(RunData::new(inst, vm)),
            Inst::Uret(inst) => Uret::run(RunData::new(inst, vm)),
            Inst::Sret(inst) => Sret::run(RunData::new(inst, vm)),
            Inst::Mret(inst) => Mret::run(RunData::new(inst, vm)),
            Inst::Wfi(inst) => Wfi::run(RunData::new(inst, vm)),
            Inst::Sb(inst) => Sb::run(RunData::new(inst, vm)),
            Inst::Sh(inst) => Sh::run(RunData::new(inst, vm)),
            Inst::Sw(inst) => Sw::run(RunData::new(inst, vm)),
            Inst::Beq(inst) => Beq::run(RunData::new(inst, vm)),
            Inst::Bne(inst) => Bne::run(RunData::new(inst, vm)),
            Inst::Blt(inst) => Blt::run(RunData::new(inst, vm)),
            Inst::Bge(inst) => Bge::run(RunData::new(inst, vm)),
            Inst::Bltu(inst) => Bltu::run(RunData::new(inst, vm)),
            Inst::Bgeu(inst) => Bgeu::run(RunData::new(inst, vm)),
            Inst::Lui(inst) => Lui::run(RunData::new(inst, vm)),
            Inst::Auipc(inst) => Auipc::run(RunData::new(inst, vm)),
            Inst::Jal(inst) => Jal::run(RunData::new(inst, vm)),
            Inst::Addw(inst) => Addw::run(RunData::new(inst, vm)),
            Inst::Subw(inst) => Subw::run(RunData::new(inst, vm)),
            Inst::Sllw(inst) => Sllw::run(RunData::new(inst, vm)),
            Inst::Srlw(inst) => Srlw::run(RunData::new(inst, vm)),
            Inst::Sraw(inst) => Sraw::run(RunData::new(inst, vm)),
            Inst::Addiw(inst) => Addiw::run(RunData::new(inst, vm)),
            Inst::Slliw(inst) => Slliw::run(RunData::new(inst, vm)),
            Inst::Srliw(inst) => Srliw::run(RunData::new(inst, vm)),
            Inst::Sraiw(inst) => Sraiw::run(RunData::new(inst, vm)),
            Inst::Lwu(inst) => Lwu::run(RunData::new(inst, vm)),
            Inst::Ld(inst) => Ld::run(RunData::new(inst, vm)),
            Inst::Sd(inst) => Sd::run(RunData::new(inst, vm)),
            Inst::Mul(inst) => Mul::run(RunData::new(inst, vm)),
            Inst::Mulh(inst) => Mulh::run(RunData::new(inst, vm)),
            Inst::Mulhsu(inst) => Mulhsu::run(RunData::new(inst, vm)),
            Inst::Mulhu(inst) => Mulhu::run(RunData::new(inst, vm)),
            Inst::Div(inst) => Div::run(RunData::new(inst, vm)),
            Inst::Divu(inst) => Divu::run(RunData::new(inst, vm)),
            Inst::Rem(inst) => Rem::run(RunData::new(inst, vm)),
            Inst::Remu(inst) => Remu::run(RunData::new(inst, vm)),
            Inst::Mulw(inst) => Mulw::run(RunData::new(inst, vm)),
            Inst::Divw(inst) => Divw::run(RunData::new(inst, vm)),
            Inst::Divuw(inst) => Divuw::run(RunData::new(inst, vm)),
            Inst::Remw(inst) => Remw::run(RunData::new(inst, vm)),
            Inst::Remuw(inst) => Remuw::run(RunData::new(inst, vm)),
            Inst::LrW(inst) => LrW::run(RunData::new(inst, vm)),
            Inst::ScW(inst) => ScW::run(RunData::new(inst, vm)),
            Inst::AmoswapW(inst) => AmoswapW::run(RunData::new(inst, vm)),
            Inst::AmoaddW(inst) => AmoaddW::run(RunData::new(inst, vm)),
            Inst::AmoxorW(inst) => AmoxorW::run(RunData::new(inst, vm)),
            Inst::AmoandW(inst) => AmoandW::run(RunData::new(inst, vm)),
            Inst::AmoorW(inst) => AmoorW::run(RunData::new(inst, vm)),
            Inst::AmominW(inst) => AmominW::run(RunData::new(inst, vm)),
            Inst::AmomaxW(inst) => AmomaxW::run(RunData::new(inst, vm)),
            Inst::AmominuW(inst) => AmominuW::run(RunData::new(inst, vm)),
            Inst::AmomaxuW(inst) => AmomaxuW::run(RunData::new(inst, vm)),
            Inst::LrD(inst) => LrD::run(RunData::new(inst, vm)),
            Inst::ScD(inst) => ScD::run(RunData::new(inst, vm)),
            Inst::AmodswapD(inst) => AmodswapD::run(RunData::new(inst, vm)),
            Inst::AmoaddD(inst) => AmoaddD::run(RunData::new(inst, vm)),
            Inst::AmoxorD(inst) => AmoxorD::run(RunData::new(inst, vm)),
            Inst::AmoandD(inst) => AmoandD::run(RunData::new(inst, vm)),
            Inst::AmoorD(inst) => AmoorD::run(RunData::new(inst, vm)),
            Inst::AmominD(inst) => AmominD::run(RunData::new(inst, vm)),
            Inst::AmomaxD(inst) => AmomaxD::run(RunData::new(inst, vm)),
            Inst::AmominuD(inst) => AmominuD::run(RunData::new(inst, vm)),
            Inst::AmomaxuD(inst) => AmomaxuD::run(RunData::new(inst, vm)),
            Inst::FmaddS(inst) => FmaddS::run(RunData::new(inst, vm)),
            Inst::FmsubS(inst) => FmsubS::run(RunData::new(inst, vm)),
            Inst::FnmsubS(inst) => FnmsubS::run(RunData::new(inst, vm)),
            Inst::FnmaddS(inst) => FnmaddS::run(RunData::new(inst, vm)),
            Inst::FaddS(inst) => FaddS::run(RunData::new(inst, vm)),
            Inst::FsubS(inst) => FsubS::run(RunData::new(inst, vm)),
            Inst::FmulS(inst) => FmulS::run(RunData::new(inst, vm)),
            Inst::FdivS(inst) => FdivS::run(RunData::new(inst, vm)),
            Inst::FsqrtS(inst) => FsqrtS::run(RunData::new(inst, vm)),
            Inst::FsgnjS(inst) => FsgnjS::run(RunData::new(inst, vm)),
            Inst::FsgnjnS(inst) => FsgnjnS::run(RunData::new(inst, vm)),
            Inst::FsgnjxS(inst) => FsgnjxS::run(RunData::new(inst, vm)),
            Inst::FminS(inst) => FminS::run(RunData::new(inst, vm)),
            Inst::FmaxS(inst) => FmaxS::run(RunData::new(inst, vm)),
            Inst::FcvtWS(inst) => FcvtWS::run(RunData::new(inst, vm)),
            Inst::FcvtWuS(inst) => FcvtWuS::run(RunData::new(inst, vm)),
            Inst::FmvXW(inst) => FmvXW::run(RunData::new(inst, vm)),
            Inst::FeqS(inst) => FeqS::run(RunData::new(inst, vm)),
            Inst::FltS(inst) => FltS::run(RunData::new(inst, vm)),
            Inst::FleS(inst) => FleS::run(RunData::new(inst, vm)),
            Inst::FclassS(inst) => FclassS::run(RunData::new(inst, vm)),
            Inst::FcvtSW(inst) => FcvtSW::run(RunData::new(inst, vm)),
            Inst::FcvtSWu(inst) => FcvtSWu::run(RunData::new(inst, vm)),
            Inst::FmvWX(inst) => FmvWX::run(RunData::new(inst, vm)),
            Inst::FmaddD(inst) => FmaddD::run(RunData::new(inst, vm)),
            Inst::FmsubD(inst) => FmsubD::run(RunData::new(inst, vm)),
            Inst::FnmsubD(inst) => FnmsubD::run(RunData::new(inst, vm)),
            Inst::FnmaddD(inst) => FnmaddD::run(RunData::new(inst, vm)),
            Inst::FaddD(inst) => FaddD::run(RunData::new(inst, vm)),
            Inst::FsubD(inst) => FsubD::run(RunData::new(inst, vm)),
            Inst::FmulD(inst) => FmulD::run(RunData::new(inst, vm)),
            Inst::FdivD(inst) => FdivD::run(RunData::new(inst, vm)),
            Inst::FsqrtD(inst) => FsqrtD::run(RunData::new(inst, vm)),
            Inst::FsgnjD(inst) => FsgnjD::run(RunData::new(inst, vm)),
            Inst::FsgnjnD(inst) => FsgnjnD::run(RunData::new(inst, vm)),
            Inst::FsgnjxD(inst) => FsgnjxD::run(RunData::new(inst, vm)),
            Inst::FminD(inst) => FminD::run(RunData::new(inst, vm)),
            Inst::FmaxD(inst) => FmaxD::run(RunData::new(inst, vm)),
            Inst::FcvtSD(inst) => FcvtSD::run(RunData::new(inst, vm)),
            Inst::FcvtDS(inst) => FcvtDS::run(RunData::new(inst, vm)),
            Inst::FeqD(inst) => FeqD::run(RunData::new(inst, vm)),
            Inst::FltD(inst) => FltD::run(RunData::new(inst, vm)),
            Inst::FleD(inst) => FleD::run(RunData::new(inst, vm)),
            Inst::FclassD(inst) => FclassD::run(RunData::new(inst, vm)),
            Inst::FcvtWD(inst) => FcvtWD::run(RunData::new(inst, vm)),
            Inst::FcvtWuD(inst) => FcvtWuD::run(RunData::new(inst, vm)),
            Inst::FcvtDW(inst) => FcvtDW::run(RunData::new(inst, vm)),
            Inst::FcvtDWu(inst) => FcvtDWu::run(RunData::new(inst, vm)),
            Inst::Flw(inst) => Flw::run(RunData::new(inst, vm)),
            Inst::Fsw(inst) => Fsw::run(RunData::new(inst, vm)),
            Inst::Fld(inst) => Fld::run(RunData::new(inst, vm)),
            Inst::Fsd(inst) => Fsd::run(RunData::new(inst, vm)),
            Inst::FcvtLS(inst) => FcvtLS::run(RunData::new(inst, vm)),
            Inst::FcvtLuS(inst) => FcvtLuS::run(RunData::new(inst, vm)),
            Inst::FcvtSL(inst) => FcvtSL::run(RunData::new(inst, vm)),
            Inst::FcvtSLu(inst) => FcvtSLu::run(RunData::new(inst, vm)),
            Inst::FcvtLD(inst) => FcvtLD::run(RunData::new(inst, vm)),
            Inst::FcvtLuD(inst) => FcvtLuD::run(RunData::new(inst, vm)),
            Inst::FmvXD(inst) => FmvXD::run(RunData::new(inst, vm)),
            Inst::FcvtDL(inst) => FcvtDL::run(RunData::new(inst, vm)),
            Inst::FcvtDLu(inst) => FcvtDLu::run(RunData::new(inst, vm)),
            Inst::FmvDX(inst) => FmvDX::run(RunData::new(inst, vm)),
            Inst::CJr(inst) => CJr::run(RunData::new(inst, vm)),
            Inst::CMv(inst) => CMv::run(RunData::new(inst, vm)),
            Inst::CEbreak(inst) => CEbreak::run(RunData::new(inst, vm)),
            Inst::CJalr(inst) => CJalr::run(RunData::new(inst, vm)),
            Inst::CAdd(inst) => CAdd::run(RunData::new(inst, vm)),
            Inst::CNop(inst) => CNop::run(RunData::new(inst, vm)),
            Inst::CAddi(inst) => CAddi::run(RunData::new(inst, vm)),
            Inst::CAddiw(inst) => CAddiw::run(RunData::new(inst, vm)),
            Inst::CLi(inst) => CLi::run(RunData::new(inst, vm)),
            Inst::CAddi16sp(inst) => CAddi16sp::run(RunData::new(inst, vm)),
            Inst::CLui(inst) => CLui::run(RunData::new(inst, vm)),
            Inst::CSrli(inst) => CSrli::run(RunData::new(inst, vm)),
            Inst::CSrai(inst) => CSrai::run(RunData::new(inst, vm)),
            Inst::CAndi(inst) => CAndi::run(RunData::new(inst, vm)),
            Inst::CSlli(inst) => CSlli::run(RunData::new(inst, vm)),
            Inst::CFldsp(inst) => CFldsp::run(RunData::new(inst, vm)),
            Inst::CLwsp(inst) => CLwsp::run(RunData::new(inst, vm)),
            Inst::CLdsp(inst) => CLdsp::run(RunData::new(inst, vm)),
            Inst::CFsdsp(inst) => CFsdsp::run(RunData::new(inst, vm)),
            Inst::CSwsp(inst) => CSwsp::run(RunData::new(inst, vm)),
            Inst::CSdsp(inst) => CSdsp::run(RunData::new(inst, vm)),
            Inst::CAddi4spn(inst) => CAddi4spn::run(RunData::new(inst, vm)),
            Inst::CFld(inst) => CFld::run(RunData::new(inst, vm)),
            Inst::CLw(inst) => CLw::run(RunData::new(inst, vm)),
            Inst::CLd(inst) => CLd::run(RunData::new(inst, vm)),
            Inst::CFsd(inst) => CFsd::run(RunData::new(inst, vm)),
            Inst::CSw(inst) => CSw::run(RunData::new(inst, vm)),
            Inst::CSd(inst) => CSd::run(RunData::new(inst, vm)),
            Inst::CSub(inst) => CSub::run(RunData::new(inst, vm)),
            Inst::CXor(inst) => CXor::run(RunData::new(inst, vm)),
            Inst::COr(inst) => COr::run(RunData::new(inst, vm)),
            Inst::CAnd(inst) => CAnd::run(RunData::new(inst, vm)),
            Inst::CSubw(inst) => CSubw::run(RunData::new(inst, vm)),
            Inst::CAddw(inst) => CAddw::run(RunData::new(inst, vm)),
            Inst::CBeqz(inst) => CBeqz::run(RunData::new(inst, vm)),
            Inst::CBnez(inst) => CBnez::run(RunData::new(inst, vm)),
            Inst::CJ(inst) => CJ::run(RunData::new(inst, vm)),
        }
    }

    #[inline]
    pub const fn name(&self) -> &'static str {
        match self {
            Inst::Add(_) => "add",
            Inst::Sub(_) => "sub",
            Inst::Sll(_) => "sll",
            Inst::Slt(_) => "slt",
            Inst::Sltu(_) => "sltu",
            Inst::Xor(_) => "xor",
            Inst::Srl(_) => "srl",
            Inst::Sra(_) => "sra",
            Inst::Or(_) => "or",
            Inst::And(_) => "and",
            Inst::SfenceVma(_) => "sfence.vma",
            Inst::Addi(_) => "addi",
            Inst::Slti(_) => "slti",
            Inst::Sltiu(_) => "sltiu",
            Inst::Xori(_) => "xori",
            Inst::Ori(_) => "ori",
            Inst::Andi(_) => "andi",
            Inst::Slli(_) => "slli",
            Inst::Srli(_) => "srli",
            Inst::Srai(_) => "srai",
            Inst::Lb(_) => "lb",
            Inst::Lh(_) => "lh",
            Inst::Lw(_) => "lw",
            Inst::Lbu(_) => "lbu",
            Inst::Lhu(_) => "lhu",
            Inst::Jalr(_) => "jalr",
            Inst::Fence(_) => "fence",
            Inst::FenceI(_) => "fence.i",
            Inst::Csrrw(_) => "csrrw",
            Inst::Csrrs(_) => "csrrs",
            Inst::Csrrc(_) => "csrrc",
            Inst::Csrrwi(_) => "csrrwi",
            Inst::Csrrsi(_) => "csrrsi",
            Inst::Csrrci(_) => "csrrci",
            Inst::Ecall(_) => "ecall",
            Inst::Ebreak(_) => "ebreak",
            Inst::Uret(_) => "uret",
            Inst::Sret(_) => "sret",
            Inst::Mret(_) => "mret",
            Inst::Wfi(_) => "wfi",
            Inst::Sb(_) => "sb",
            Inst::Sh(_) => "sh",
            Inst::Sw(_) => "sw",
            Inst::Beq(_) => "beq",
            Inst::Bne(_) => "bne",
            Inst::Blt(_) => "blt",
            Inst::Bge(_) => "bge",
            Inst::Bltu(_) => "bltu",
            Inst::Bgeu(_) => "bgeu",
            Inst::Lui(_) => "lui",
            Inst::Auipc(_) => "auipc",
            Inst::Jal(_) => "jal",
            Inst::Addw(_) => "addw",
            Inst::Subw(_) => "subw",
            Inst::Sllw(_) => "sllw",
            Inst::Srlw(_) => "srlw",
            Inst::Sraw(_) => "sraw",
            Inst::Addiw(_) => "addiw",
            Inst::Slliw(_) => "slliw",
            Inst::Srliw(_) => "srliw",
            Inst::Sraiw(_) => "sraiw",
            Inst::Lwu(_) => "lwu",
            Inst::Ld(_) => "ld",
            Inst::Sd(_) => "sd",
            Inst::Mul(_) => "mul",
            Inst::Mulh(_) => "mulh",
            Inst::Mulhsu(_) => "mulhsu",
            Inst::Mulhu(_) => "mulhu",
            Inst::Div(_) => "div",
            Inst::Divu(_) => "divu",
            Inst::Rem(_) => "rem",
            Inst::Remu(_) => "remu",
            Inst::Mulw(_) => "mulw",
            Inst::Divw(_) => "divw",
            Inst::Divuw(_) => "divuw",
            Inst::Remw(_) => "remw",
            Inst::Remuw(_) => "remuw",
            Inst::LrW(_) => "lr.w",
            Inst::ScW(_) => "sc.w",
            Inst::AmoswapW(_) => "amoswap.w",
            Inst::AmoaddW(_) => "amoadd.w",
            Inst::AmoxorW(_) => "amoxor.w",
            Inst::AmoandW(_) => "amoand.w",
            Inst::AmoorW(_) => "amoor.w",
            Inst::AmominW(_) => "amomin.w",
            Inst::AmomaxW(_) => "amomax.w",
            Inst::AmominuW(_) => "amominu.w",
            Inst::AmomaxuW(_) => "amomaxu.w",
            Inst::LrD(_) => "lr.d",
            Inst::ScD(_) => "sc.d",
            Inst::AmodswapD(_) => "amodswap.d",
            Inst::AmoaddD(_) => "amoadd.d",
            Inst::AmoxorD(_) => "amoxor.d",
            Inst::AmoandD(_) => "amoand.d",
            Inst::AmoorD(_) => "amoor.d",
            Inst::AmominD(_) => "amomin.d",
            Inst::AmomaxD(_) => "amomax.d",
            Inst::AmominuD(_) => "amominu.d",
            Inst::AmomaxuD(_) => "amomaxu.d",
            Inst::FmaddS(_) => "fmadd.s",
            Inst::FmsubS(_) => "fmsub.s",
            Inst::FnmsubS(_) => "fnmsub.s",
            Inst::FnmaddS(_) => "fnmadd.s",
            Inst::FaddS(_) => "fadd.s",
            Inst::FsubS(_) => "fsub.s",
            Inst::FmulS(_) => "fmul.s",
            Inst::FdivS(_) => "fdiv.s",
            Inst::FsqrtS(_) => "fsqrt.s",
            Inst::FsgnjS(_) => "fsgnj.s",
            Inst::FsgnjnS(_) => "fsgnjn.s",
            Inst::FsgnjxS(_) => "fsgnjx.s",
            Inst::FminS(_) => "fmin.s",
            Inst::FmaxS(_) => "fmax.s",
            Inst::FcvtWS(_) => "fcvt.w.s",
            Inst::FcvtWuS(_) => "fcvt.wu.s",
            Inst::FmvXW(_) => "fmv.x.w",
            Inst::FeqS(_) => "feq.s",
            Inst::FltS(_) => "flt.s",
            Inst::FleS(_) => "fle.s",
            Inst::FclassS(_) => "fclass.s",
            Inst::FcvtSW(_) => "fcvt.s.w",
            Inst::FcvtSWu(_) => "fcvt.s.wu",
            Inst::FmvWX(_) => "fmv.w.x",
            Inst::FmaddD(_) => "fmadd.d",
            Inst::FmsubD(_) => "fmsub.d",
            Inst::FnmsubD(_) => "fnmsub.d",
            Inst::FnmaddD(_) => "fnmadd.d",
            Inst::FaddD(_) => "fadd.d",
            Inst::FsubD(_) => "fsub.d",
            Inst::FmulD(_) => "fmul.d",
            Inst::FdivD(_) => "fdiv.d",
            Inst::FsqrtD(_) => "fsqrt.d",
            Inst::FsgnjD(_) => "fsgnj.d",
            Inst::FsgnjnD(_) => "fsgnjn.d",
            Inst::FsgnjxD(_) => "fsgnjx.d",
            Inst::FminD(_) => "fmin.d",
            Inst::FmaxD(_) => "fmax.d",
            Inst::FcvtSD(_) => "fcvt.s.d",
            Inst::FcvtDS(_) => "fcvt.d.s",
            Inst::FeqD(_) => "feq.d",
            Inst::FltD(_) => "flt.d",
            Inst::FleD(_) => "fle.d",
            Inst::FclassD(_) => "fclass.d",
            Inst::FcvtWD(_) => "fcvt.w.d",
            Inst::FcvtWuD(_) => "fcvt.wu.d",
            Inst::FcvtDW(_) => "fcvt.d.w",
            Inst::FcvtDWu(_) => "fcvt.d.wu",
            Inst::Flw(_) => "flw",
            Inst::Fsw(_) => "fsw",
            Inst::Fld(_) => "fld",
            Inst::Fsd(_) => "fsd",
            Inst::FcvtLS(_) => "fcvt.l.s",
            Inst::FcvtLuS(_) => "fcvt.lu.s",
            Inst::FcvtSL(_) => "fcvt.s.l",
            Inst::FcvtSLu(_) => "fcvt.s.lu",
            Inst::FcvtLD(_) => "fcvt.l.d",
            Inst::FcvtLuD(_) => "fcvt.lu.d",
            Inst::FmvXD(_) => "fmv.x.d",
            Inst::FcvtDL(_) => "fcvt.d.l",
            Inst::FcvtDLu(_) => "fcvt.d.lu",
            Inst::FmvDX(_) => "fmv.d.x",
            Inst::CJr(_) => "c.jr",
            Inst::CMv(_) => "c.mv",
            Inst::CEbreak(_) => "c.ebreak",
            Inst::CJalr(_) => "c.jalr",
            Inst::CAdd(_) => "c.add",
            Inst::CNop(_) => "c.nop",
            Inst::CAddi(_) => "c.addi",
            Inst::CAddiw(_) => "c.addiw",
            Inst::CLi(_) => "c.li",
            Inst::CAddi16sp(_) => "c.addi16sp",
            Inst::CLui(_) => "c.lui",
            Inst::CSrli(_) => "c.srli",
            Inst::CSrai(_) => "c.srai",
            Inst::CAndi(_) => "c.andi",
            Inst::CSlli(_) => "c.slli",
            Inst::CFldsp(_) => "c.fldsp",
            Inst::CLwsp(_) => "c.lwsp",
            Inst::CLdsp(_) => "c.ldsp",
            Inst::CFsdsp(_) => "c.fsdsp",
            Inst::CSwsp(_) => "c.swsp",
            Inst::CSdsp(_) => "c.sdsp",
            Inst::CAddi4spn(_) => "c.addi4spn",
            Inst::CFld(_) => "c.fld",
            Inst::CLw(_) => "c.lw",
            Inst::CLd(_) => "c.ld",
            Inst::CFsd(_) => "c.fsd",
            Inst::CSw(_) => "c.sw",
            Inst::CSd(_) => "c.sd",
            Inst::CSub(_) => "c.sub",
            Inst::CXor(_) => "c.xor",
            Inst::COr(_) => "c.or",
            Inst::CAnd(_) => "c.and",
            Inst::CSubw(_) => "c.subw",
            Inst::CAddw(_) => "c.addw",
            Inst::CBeqz(_) => "c.beqz",
            Inst::CBnez(_) => "c.bnez",
            Inst::CJ(_) => "c.j",
        }
    }

    #[inline]
    pub const fn format(&self) -> Format {
        match self {
            Inst::Add(_) => Format::R,
            Inst::Sub(_) => Format::R,
            Inst::Sll(_) => Format::R,
            Inst::Slt(_) => Format::R,
            Inst::Sltu(_) => Format::R,
            Inst::Xor(_) => Format::R,
            Inst::Srl(_) => Format::R,
            Inst::Sra(_) => Format::R,
            Inst::Or(_) => Format::R,
            Inst::And(_) => Format::R,
            Inst::SfenceVma(_) => Format::R,
            Inst::Addi(_) => Format::I,
            Inst::Slti(_) => Format::I,
            Inst::Sltiu(_) => Format::I,
            Inst::Xori(_) => Format::I,
            Inst::Ori(_) => Format::I,
            Inst::Andi(_) => Format::I,
            Inst::Slli(_) => Format::I,
            Inst::Srli(_) => Format::I,
            Inst::Srai(_) => Format::I,
            Inst::Lb(_) => Format::I,
            Inst::Lh(_) => Format::I,
            Inst::Lw(_) => Format::I,
            Inst::Lbu(_) => Format::I,
            Inst::Lhu(_) => Format::I,
            Inst::Jalr(_) => Format::I,
            Inst::Fence(_) => Format::I,
            Inst::FenceI(_) => Format::I,
            Inst::Csrrw(_) => Format::I,
            Inst::Csrrs(_) => Format::I,
            Inst::Csrrc(_) => Format::I,
            Inst::Csrrwi(_) => Format::I,
            Inst::Csrrsi(_) => Format::I,
            Inst::Csrrci(_) => Format::I,
            Inst::Ecall(_) => Format::I,
            Inst::Ebreak(_) => Format::I,
            Inst::Uret(_) => Format::I,
            Inst::Sret(_) => Format::I,
            Inst::Mret(_) => Format::I,
            Inst::Wfi(_) => Format::I,
            Inst::Sb(_) => Format::S,
            Inst::Sh(_) => Format::S,
            Inst::Sw(_) => Format::S,
            Inst::Beq(_) => Format::B,
            Inst::Bne(_) => Format::B,
            Inst::Blt(_) => Format::B,
            Inst::Bge(_) => Format::B,
            Inst::Bltu(_) => Format::B,
            Inst::Bgeu(_) => Format::B,
            Inst::Lui(_) => Format::U,
            Inst::Auipc(_) => Format::U,
            Inst::Jal(_) => Format::J,
            Inst::Addw(_) => Format::R,
            Inst::Subw(_) => Format::R,
            Inst::Sllw(_) => Format::R,
            Inst::Srlw(_) => Format::R,
            Inst::Sraw(_) => Format::R,
            Inst::Addiw(_) => Format::I,
            Inst::Slliw(_) => Format::I,
            Inst::Srliw(_) => Format::I,
            Inst::Sraiw(_) => Format::I,
            Inst::Lwu(_) => Format::I,
            Inst::Ld(_) => Format::I,
            Inst::Sd(_) => Format::S,
            Inst::Mul(_) => Format::R,
            Inst::Mulh(_) => Format::R,
            Inst::Mulhsu(_) => Format::R,
            Inst::Mulhu(_) => Format::R,
            Inst::Div(_) => Format::R,
            Inst::Divu(_) => Format::R,
            Inst::Rem(_) => Format::R,
            Inst::Remu(_) => Format::R,
            Inst::Mulw(_) => Format::R,
            Inst::Divw(_) => Format::R,
            Inst::Divuw(_) => Format::R,
            Inst::Remw(_) => Format::R,
            Inst::Remuw(_) => Format::R,
            Inst::LrW(_) => Format::R,
            Inst::ScW(_) => Format::R,
            Inst::AmoswapW(_) => Format::R,
            Inst::AmoaddW(_) => Format::R,
            Inst::AmoxorW(_) => Format::R,
            Inst::AmoandW(_) => Format::R,
            Inst::AmoorW(_) => Format::R,
            Inst::AmominW(_) => Format::R,
            Inst::AmomaxW(_) => Format::R,
            Inst::AmominuW(_) => Format::R,
            Inst::AmomaxuW(_) => Format::R,
            Inst::LrD(_) => Format::R,
            Inst::ScD(_) => Format::R,
            Inst::AmodswapD(_) => Format::R,
            Inst::AmoaddD(_) => Format::R,
            Inst::AmoxorD(_) => Format::R,
            Inst::AmoandD(_) => Format::R,
            Inst::AmoorD(_) => Format::R,
            Inst::AmominD(_) => Format::R,
            Inst::AmomaxD(_) => Format::R,
            Inst::AmominuD(_) => Format::R,
            Inst::AmomaxuD(_) => Format::R,
            Inst::FmaddS(_) => Format::R,
            Inst::FmsubS(_) => Format::R,
            Inst::FnmsubS(_) => Format::R,
            Inst::FnmaddS(_) => Format::R,
            Inst::FaddS(_) => Format::R,
            Inst::FsubS(_) => Format::R,
            Inst::FmulS(_) => Format::R,
            Inst::FdivS(_) => Format::R,
            Inst::FsqrtS(_) => Format::R,
            Inst::FsgnjS(_) => Format::R,
            Inst::FsgnjnS(_) => Format::R,
            Inst::FsgnjxS(_) => Format::R,
            Inst::FminS(_) => Format::R,
            Inst::FmaxS(_) => Format::R,
            Inst::FcvtWS(_) => Format::R,
            Inst::FcvtWuS(_) => Format::R,
            Inst::FmvXW(_) => Format::R,
            Inst::FeqS(_) => Format::R,
            Inst::FltS(_) => Format::R,
            Inst::FleS(_) => Format::R,
            Inst::FclassS(_) => Format::R,
            Inst::FcvtSW(_) => Format::R,
            Inst::FcvtSWu(_) => Format::R,
            Inst::FmvWX(_) => Format::R,
            Inst::FmaddD(_) => Format::R,
            Inst::FmsubD(_) => Format::R,
            Inst::FnmsubD(_) => Format::R,
            Inst::FnmaddD(_) => Format::R,
            Inst::FaddD(_) => Format::R,
            Inst::FsubD(_) => Format::R,
            Inst::FmulD(_) => Format::R,
            Inst::FdivD(_) => Format::R,
            Inst::FsqrtD(_) => Format::R,
            Inst::FsgnjD(_) => Format::R,
            Inst::FsgnjnD(_) => Format::R,
            Inst::FsgnjxD(_) => Format::R,
            Inst::FminD(_) => Format::R,
            Inst::FmaxD(_) => Format::R,
            Inst::FcvtSD(_) => Format::R,
            Inst::FcvtDS(_) => Format::R,
            Inst::FeqD(_) => Format::R,
            Inst::FltD(_) => Format::R,
            Inst::FleD(_) => Format::R,
            Inst::FclassD(_) => Format::R,
            Inst::FcvtWD(_) => Format::R,
            Inst::FcvtWuD(_) => Format::R,
            Inst::FcvtDW(_) => Format::R,
            Inst::FcvtDWu(_) => Format::R,
            Inst::Flw(_) => Format::R,
            Inst::Fsw(_) => Format::R,
            Inst::Fld(_) => Format::R,
            Inst::Fsd(_) => Format::R,
            Inst::FcvtLS(_) => Format::R,
            Inst::FcvtLuS(_) => Format::R,
            Inst::FcvtSL(_) => Format::R,
            Inst::FcvtSLu(_) => Format::R,
            Inst::FcvtLD(_) => Format::R,
            Inst::FcvtLuD(_) => Format::R,
            Inst::FmvXD(_) => Format::R,
            Inst::FcvtDL(_) => Format::R,
            Inst::FcvtDLu(_) => Format::R,
            Inst::FmvDX(_) => Format::R,
            Inst::CJr(_) => Format::CR,
            Inst::CMv(_) => Format::CR,
            Inst::CEbreak(_) => Format::CR,
            Inst::CJalr(_) => Format::CR,
            Inst::CAdd(_) => Format::CR,
            Inst::CNop(_) => Format::CI,
            Inst::CAddi(_) => Format::CI,
            Inst::CAddiw(_) => Format::CI,
            Inst::CLi(_) => Format::CI,
            Inst::CAddi16sp(_) => Format::CI,
            Inst::CLui(_) => Format::CI,
            Inst::CSrli(_) => Format::CI,
            Inst::CSrai(_) => Format::CI,
            Inst::CAndi(_) => Format::CI,
            Inst::CSlli(_) => Format::CI,
            Inst::CFldsp(_) => Format::CI,
            Inst::CLwsp(_) => Format::CI,
            Inst::CLdsp(_) => Format::CI,
            Inst::CFsdsp(_) => Format::CSS,
            Inst::CSwsp(_) => Format::CSS,
            Inst::CSdsp(_) => Format::CSS,
            Inst::CAddi4spn(_) => Format::CIW,
            Inst::CFld(_) => Format::CL,
            Inst::CLw(_) => Format::CL,
            Inst::CLd(_) => Format::CL,
            Inst::CFsd(_) => Format::CS,
            Inst::CSw(_) => Format::CS,
            Inst::CSd(_) => Format::CS,
            Inst::CSub(_) => Format::CA,
            Inst::CXor(_) => Format::CA,
            Inst::COr(_) => Format::CA,
            Inst::CAnd(_) => Format::CA,
            Inst::CSubw(_) => Format::CA,
            Inst::CAddw(_) => Format::CA,
            Inst::CBeqz(_) => Format::CB,
            Inst::CBnez(_) => Format::CB,
            Inst::CJ(_) => Format::CJ,
        }
    }

    #[inline]
    pub const fn inner(self) -> RawInst {
        match self {
            Inst::Add(v) => v,
            Inst::Sub(v) => v,
            Inst::Sll(v) => v,
            Inst::Slt(v) => v,
            Inst::Sltu(v) => v,
            Inst::Xor(v) => v,
            Inst::Srl(v) => v,
            Inst::Sra(v) => v,
            Inst::Or(v) => v,
            Inst::And(v) => v,
            Inst::SfenceVma(v) => v,
            Inst::Addi(v) => v,
            Inst::Slti(v) => v,
            Inst::Sltiu(v) => v,
            Inst::Xori(v) => v,
            Inst::Ori(v) => v,
            Inst::Andi(v) => v,
            Inst::Slli(v) => v,
            Inst::Srli(v) => v,
            Inst::Srai(v) => v,
            Inst::Lb(v) => v,
            Inst::Lh(v) => v,
            Inst::Lw(v) => v,
            Inst::Lbu(v) => v,
            Inst::Lhu(v) => v,
            Inst::Jalr(v) => v,
            Inst::Fence(v) => v,
            Inst::FenceI(v) => v,
            Inst::Csrrw(v) => v,
            Inst::Csrrs(v) => v,
            Inst::Csrrc(v) => v,
            Inst::Csrrwi(v) => v,
            Inst::Csrrsi(v) => v,
            Inst::Csrrci(v) => v,
            Inst::Ecall(v) => v,
            Inst::Ebreak(v) => v,
            Inst::Uret(v) => v,
            Inst::Sret(v) => v,
            Inst::Mret(v) => v,
            Inst::Wfi(v) => v,
            Inst::Sb(v) => v,
            Inst::Sh(v) => v,
            Inst::Sw(v) => v,
            Inst::Beq(v) => v,
            Inst::Bne(v) => v,
            Inst::Blt(v) => v,
            Inst::Bge(v) => v,
            Inst::Bltu(v) => v,
            Inst::Bgeu(v) => v,
            Inst::Lui(v) => v,
            Inst::Auipc(v) => v,
            Inst::Jal(v) => v,
            Inst::Addw(v) => v,
            Inst::Subw(v) => v,
            Inst::Sllw(v) => v,
            Inst::Srlw(v) => v,
            Inst::Sraw(v) => v,
            Inst::Addiw(v) => v,
            Inst::Slliw(v) => v,
            Inst::Srliw(v) => v,
            Inst::Sraiw(v) => v,
            Inst::Lwu(v) => v,
            Inst::Ld(v) => v,
            Inst::Sd(v) => v,
            Inst::Mul(v) => v,
            Inst::Mulh(v) => v,
            Inst::Mulhsu(v) => v,
            Inst::Mulhu(v) => v,
            Inst::Div(v) => v,
            Inst::Divu(v) => v,
            Inst::Rem(v) => v,
            Inst::Remu(v) => v,
            Inst::Mulw(v) => v,
            Inst::Divw(v) => v,
            Inst::Divuw(v) => v,
            Inst::Remw(v) => v,
            Inst::Remuw(v) => v,
            Inst::LrW(v) => v,
            Inst::ScW(v) => v,
            Inst::AmoswapW(v) => v,
            Inst::AmoaddW(v) => v,
            Inst::AmoxorW(v) => v,
            Inst::AmoandW(v) => v,
            Inst::AmoorW(v) => v,
            Inst::AmominW(v) => v,
            Inst::AmomaxW(v) => v,
            Inst::AmominuW(v) => v,
            Inst::AmomaxuW(v) => v,
            Inst::LrD(v) => v,
            Inst::ScD(v) => v,
            Inst::AmodswapD(v) => v,
            Inst::AmoaddD(v) => v,
            Inst::AmoxorD(v) => v,
            Inst::AmoandD(v) => v,
            Inst::AmoorD(v) => v,
            Inst::AmominD(v) => v,
            Inst::AmomaxD(v) => v,
            Inst::AmominuD(v) => v,
            Inst::AmomaxuD(v) => v,
            Inst::FmaddS(v) => v,
            Inst::FmsubS(v) => v,
            Inst::FnmsubS(v) => v,
            Inst::FnmaddS(v) => v,
            Inst::FaddS(v) => v,
            Inst::FsubS(v) => v,
            Inst::FmulS(v) => v,
            Inst::FdivS(v) => v,
            Inst::FsqrtS(v) => v,
            Inst::FsgnjS(v) => v,
            Inst::FsgnjnS(v) => v,
            Inst::FsgnjxS(v) => v,
            Inst::FminS(v) => v,
            Inst::FmaxS(v) => v,
            Inst::FcvtWS(v) => v,
            Inst::FcvtWuS(v) => v,
            Inst::FmvXW(v) => v,
            Inst::FeqS(v) => v,
            Inst::FltS(v) => v,
            Inst::FleS(v) => v,
            Inst::FclassS(v) => v,
            Inst::FcvtSW(v) => v,
            Inst::FcvtSWu(v) => v,
            Inst::FmvWX(v) => v,
            Inst::FmaddD(v) => v,
            Inst::FmsubD(v) => v,
            Inst::FnmsubD(v) => v,
            Inst::FnmaddD(v) => v,
            Inst::FaddD(v) => v,
            Inst::FsubD(v) => v,
            Inst::FmulD(v) => v,
            Inst::FdivD(v) => v,
            Inst::FsqrtD(v) => v,
            Inst::FsgnjD(v) => v,
            Inst::FsgnjnD(v) => v,
            Inst::FsgnjxD(v) => v,
            Inst::FminD(v) => v,
            Inst::FmaxD(v) => v,
            Inst::FcvtSD(v) => v,
            Inst::FcvtDS(v) => v,
            Inst::FeqD(v) => v,
            Inst::FltD(v) => v,
            Inst::FleD(v) => v,
            Inst::FclassD(v) => v,
            Inst::FcvtWD(v) => v,
            Inst::FcvtWuD(v) => v,
            Inst::FcvtDW(v) => v,
            Inst::FcvtDWu(v) => v,
            Inst::Flw(v) => v,
            Inst::Fsw(v) => v,
            Inst::Fld(v) => v,
            Inst::Fsd(v) => v,
            Inst::FcvtLS(v) => v,
            Inst::FcvtLuS(v) => v,
            Inst::FcvtSL(v) => v,
            Inst::FcvtSLu(v) => v,
            Inst::FcvtLD(v) => v,
            Inst::FcvtLuD(v) => v,
            Inst::FmvXD(v) => v,
            Inst::FcvtDL(v) => v,
            Inst::FcvtDLu(v) => v,
            Inst::FmvDX(v) => v,
            Inst::CJr(v) => v,
            Inst::CMv(v) => v,
            Inst::CEbreak(v) => v,
            Inst::CJalr(v) => v,
            Inst::CAdd(v) => v,
            Inst::CNop(v) => v,
            Inst::CAddi(v) => v,
            Inst::CAddiw(v) => v,
            Inst::CLi(v) => v,
            Inst::CAddi16sp(v) => v,
            Inst::CLui(v) => v,
            Inst::CSrli(v) => v,
            Inst::CSrai(v) => v,
            Inst::CAndi(v) => v,
            Inst::CSlli(v) => v,
            Inst::CFldsp(v) => v,
            Inst::CLwsp(v) => v,
            Inst::CLdsp(v) => v,
            Inst::CFsdsp(v) => v,
            Inst::CSwsp(v) => v,
            Inst::CSdsp(v) => v,
            Inst::CAddi4spn(v) => v,
            Inst::CFld(v) => v,
            Inst::CLw(v) => v,
            Inst::CLd(v) => v,
            Inst::CFsd(v) => v,
            Inst::CSw(v) => v,
            Inst::CSd(v) => v,
            Inst::CSub(v) => v,
            Inst::CXor(v) => v,
            Inst::COr(v) => v,
            Inst::CAnd(v) => v,
            Inst::CSubw(v) => v,
            Inst::CAddw(v) => v,
            Inst::CBeqz(v) => v,
            Inst::CBnez(v) => v,
            Inst::CJ(v) => v,
        }
    }

    #[inline]
    pub const fn raw(self) -> Word {
        self.inner().raw()
    }

    #[inline]
    pub const fn discriminant(&self) -> UHSize {
        match self {
            Inst::Add(_) => 0,
            Inst::Sub(_) => 1,
            Inst::Sll(_) => 2,
            Inst::Slt(_) => 3,
            Inst::Sltu(_) => 4,
            Inst::Xor(_) => 5,
            Inst::Srl(_) => 6,
            Inst::Sra(_) => 7,
            Inst::Or(_) => 8,
            Inst::And(_) => 9,
            Inst::SfenceVma(_) => 10,
            Inst::Addi(_) => 11,
            Inst::Slti(_) => 12,
            Inst::Sltiu(_) => 13,
            Inst::Xori(_) => 14,
            Inst::Ori(_) => 15,
            Inst::Andi(_) => 16,
            Inst::Slli(_) => 17,
            Inst::Srli(_) => 18,
            Inst::Srai(_) => 19,
            Inst::Lb(_) => 20,
            Inst::Lh(_) => 21,
            Inst::Lw(_) => 22,
            Inst::Lbu(_) => 23,
            Inst::Lhu(_) => 24,
            Inst::Jalr(_) => 25,
            Inst::Fence(_) => 26,
            Inst::FenceI(_) => 27,
            Inst::Csrrw(_) => 28,
            Inst::Csrrs(_) => 29,
            Inst::Csrrc(_) => 30,
            Inst::Csrrwi(_) => 31,
            Inst::Csrrsi(_) => 32,
            Inst::Csrrci(_) => 33,
            Inst::Ecall(_) => 34,
            Inst::Ebreak(_) => 35,
            Inst::Uret(_) => 36,
            Inst::Sret(_) => 37,
            Inst::Mret(_) => 38,
            Inst::Wfi(_) => 39,
            Inst::Sb(_) => 40,
            Inst::Sh(_) => 41,
            Inst::Sw(_) => 42,
            Inst::Beq(_) => 43,
            Inst::Bne(_) => 44,
            Inst::Blt(_) => 45,
            Inst::Bge(_) => 46,
            Inst::Bltu(_) => 47,
            Inst::Bgeu(_) => 48,
            Inst::Lui(_) => 49,
            Inst::Auipc(_) => 50,
            Inst::Jal(_) => 51,
            Inst::Addw(_) => 52,
            Inst::Subw(_) => 53,
            Inst::Sllw(_) => 54,
            Inst::Srlw(_) => 55,
            Inst::Sraw(_) => 56,
            Inst::Addiw(_) => 57,
            Inst::Slliw(_) => 58,
            Inst::Srliw(_) => 59,
            Inst::Sraiw(_) => 60,
            Inst::Lwu(_) => 61,
            Inst::Ld(_) => 62,
            Inst::Sd(_) => 63,
            Inst::Mul(_) => 64,
            Inst::Mulh(_) => 65,
            Inst::Mulhsu(_) => 66,
            Inst::Mulhu(_) => 67,
            Inst::Div(_) => 68,
            Inst::Divu(_) => 69,
            Inst::Rem(_) => 70,
            Inst::Remu(_) => 71,
            Inst::Mulw(_) => 72,
            Inst::Divw(_) => 73,
            Inst::Divuw(_) => 74,
            Inst::Remw(_) => 75,
            Inst::Remuw(_) => 76,
            Inst::LrW(_) => 77,
            Inst::ScW(_) => 78,
            Inst::AmoswapW(_) => 79,
            Inst::AmoaddW(_) => 80,
            Inst::AmoxorW(_) => 81,
            Inst::AmoandW(_) => 82,
            Inst::AmoorW(_) => 83,
            Inst::AmominW(_) => 84,
            Inst::AmomaxW(_) => 85,
            Inst::AmominuW(_) => 86,
            Inst::AmomaxuW(_) => 87,
            Inst::LrD(_) => 88,
            Inst::ScD(_) => 89,
            Inst::AmodswapD(_) => 90,
            Inst::AmoaddD(_) => 91,
            Inst::AmoxorD(_) => 92,
            Inst::AmoandD(_) => 93,
            Inst::AmoorD(_) => 94,
            Inst::AmominD(_) => 95,
            Inst::AmomaxD(_) => 96,
            Inst::AmominuD(_) => 97,
            Inst::AmomaxuD(_) => 98,
            Inst::FmaddS(_) => 99,
            Inst::FmsubS(_) => 100,
            Inst::FnmsubS(_) => 101,
            Inst::FnmaddS(_) => 102,
            Inst::FaddS(_) => 103,
            Inst::FsubS(_) => 104,
            Inst::FmulS(_) => 105,
            Inst::FdivS(_) => 106,
            Inst::FsqrtS(_) => 107,
            Inst::FsgnjS(_) => 108,
            Inst::FsgnjnS(_) => 109,
            Inst::FsgnjxS(_) => 110,
            Inst::FminS(_) => 111,
            Inst::FmaxS(_) => 112,
            Inst::FcvtWS(_) => 113,
            Inst::FcvtWuS(_) => 114,
            Inst::FmvXW(_) => 115,
            Inst::FeqS(_) => 116,
            Inst::FltS(_) => 117,
            Inst::FleS(_) => 118,
            Inst::FclassS(_) => 119,
            Inst::FcvtSW(_) => 120,
            Inst::FcvtSWu(_) => 121,
            Inst::FmvWX(_) => 122,
            Inst::FmaddD(_) => 123,
            Inst::FmsubD(_) => 124,
            Inst::FnmsubD(_) => 125,
            Inst::FnmaddD(_) => 126,
            Inst::FaddD(_) => 127,
            Inst::FsubD(_) => 128,
            Inst::FmulD(_) => 129,
            Inst::FdivD(_) => 130,
            Inst::FsqrtD(_) => 131,
            Inst::FsgnjD(_) => 132,
            Inst::FsgnjnD(_) => 133,
            Inst::FsgnjxD(_) => 134,
            Inst::FminD(_) => 135,
            Inst::FmaxD(_) => 136,
            Inst::FcvtSD(_) => 137,
            Inst::FcvtDS(_) => 138,
            Inst::FeqD(_) => 139,
            Inst::FltD(_) => 140,
            Inst::FleD(_) => 141,
            Inst::FclassD(_) => 142,
            Inst::FcvtWD(_) => 143,
            Inst::FcvtWuD(_) => 144,
            Inst::FcvtDW(_) => 145,
            Inst::FcvtDWu(_) => 146,
            Inst::Flw(_) => 147,
            Inst::Fsw(_) => 148,
            Inst::Fld(_) => 149,
            Inst::Fsd(_) => 150,
            Inst::FcvtLS(_) => 151,
            Inst::FcvtLuS(_) => 152,
            Inst::FcvtSL(_) => 153,
            Inst::FcvtSLu(_) => 154,
            Inst::FcvtLD(_) => 155,
            Inst::FcvtLuD(_) => 156,
            Inst::FmvXD(_) => 157,
            Inst::FcvtDL(_) => 158,
            Inst::FcvtDLu(_) => 159,
            Inst::FmvDX(_) => 160,
            Inst::CJr(_) => 161,
            Inst::CMv(_) => 162,
            Inst::CEbreak(_) => 163,
            Inst::CJalr(_) => 164,
            Inst::CAdd(_) => 165,
            Inst::CNop(_) => 166,
            Inst::CAddi(_) => 167,
            Inst::CAddiw(_) => 168,
            Inst::CLi(_) => 169,
            Inst::CAddi16sp(_) => 170,
            Inst::CLui(_) => 171,
            Inst::CSrli(_) => 172,
            Inst::CSrai(_) => 173,
            Inst::CAndi(_) => 174,
            Inst::CSlli(_) => 175,
            Inst::CFldsp(_) => 176,
            Inst::CLwsp(_) => 177,
            Inst::CLdsp(_) => 178,
            Inst::CFsdsp(_) => 179,
            Inst::CSwsp(_) => 180,
            Inst::CSdsp(_) => 181,
            Inst::CAddi4spn(_) => 182,
            Inst::CFld(_) => 183,
            Inst::CLw(_) => 184,
            Inst::CLd(_) => 185,
            Inst::CFsd(_) => 186,
            Inst::CSw(_) => 187,
            Inst::CSd(_) => 188,
            Inst::CSub(_) => 189,
            Inst::CXor(_) => 190,
            Inst::COr(_) => 191,
            Inst::CAnd(_) => 192,
            Inst::CSubw(_) => 193,
            Inst::CAddw(_) => 194,
            Inst::CBeqz(_) => 195,
            Inst::CBnez(_) => 196,
            Inst::CJ(_) => 197,
        }
    }
}
